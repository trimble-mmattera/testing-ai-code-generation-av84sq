apiVersion: apps/v1
kind: Deployment
metadata:
  name: document-api
  labels:
    app: document-management
    component: api
    part-of: document-platform
  annotations:
    kubernetes.io/description: "API service for the Document Management Platform"
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: document-management
      component: api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: document-management
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: api
        image: {{.Values.image.repository}}/document-api:{{.Values.image.tag}}
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        env:
        - name: CONFIG_FILE
          value: "/app/config/production.yml"
        - name: LOG_LEVEL
          value: "info"
        - name: DATABASE_HOST
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: db-host
        - name: DATABASE_PORT
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: db-port
        - name: DATABASE_USERNAME
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: db-username
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: db-password
        - name: DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: db-name
        - name: STORAGE_REGION
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: aws-region
        - name: STORAGE_TEMP_BUCKET
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: s3-temp-bucket
        - name: STORAGE_PERMANENT_BUCKET
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: s3-permanent-bucket
        - name: STORAGE_QUARANTINE_BUCKET
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: s3-quarantine-bucket
        - name: STORAGE_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: aws-access-key
        - name: STORAGE_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: aws-secret-key
        - name: SEARCH_ADDRESSES
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: elasticsearch-addresses
        - name: SEARCH_USERNAME
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: elasticsearch-username
        - name: SEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: elasticsearch-password
        - name: AUTH_JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: jwt-secret
        - name: VIRUS_SCAN_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: clamav-endpoint
        - name: MESSAGING_DOCUMENT_QUEUE
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: sqs-document-queue
        - name: MESSAGING_EVENT_TOPIC
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: sns-event-topic
        - name: CACHE_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: redis-address
        - name: CACHE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: redis-password
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: config-volume
        configMap:
          name: app-config
      - name: tmp-volume
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      serviceAccountName: document-api-sa
      terminationGracePeriodSeconds: 60