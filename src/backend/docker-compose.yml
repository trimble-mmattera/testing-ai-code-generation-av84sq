version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: api
        VERSION: '${VERSION:-latest}'
        GIT_COMMIT: '${GIT_COMMIT:-unknown}'
        BUILD_DATE: '${BUILD_DATE:-unknown}'
    ports:
      - "8080:8080"
    volumes:
      - ./config:/app/config
    environment:
      - ENV=${ENV:-production}
      - CONFIG_FILE=/app/config/default.yml
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      - postgres
      - elasticsearch
      - redis
      - clamav
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s

  worker:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE: worker
        VERSION: '${VERSION:-latest}'
        GIT_COMMIT: '${GIT_COMMIT:-unknown}'
        BUILD_DATE: '${BUILD_DATE:-unknown}'
    volumes:
      - ./config:/app/config
    environment:
      - ENV=${ENV:-production}
      - CONFIG_FILE=/app/config/default.yml
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      - postgres
      - elasticsearch
      - redis
      - clamav
    restart: unless-stopped

  postgres:
    image: postgres:14.0 # postgres version 14.0
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-document_mgmt}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  elasticsearch:
    image: elasticsearch:8.0 # elasticsearch version 8.0
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-changeme}
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

  redis:
    image: redis:6.2 # redis version 6.2
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD:-changeme}"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 5s
    restart: unless-stopped

  clamav:
    image: clamav/clamav:latest # clamav version latest
    ports:
      - "3310:3310"
    volumes:
      - clamav_data:/var/lib/clamav
    healthcheck:
      test: ["CMD", "/usr/bin/clamdscan", "--ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  elasticsearch_data:
    driver: local
  redis_data:
    driver: local
  clamav_data:
    driver: local

networks:
  document_mgmt_network:
    driver: bridge